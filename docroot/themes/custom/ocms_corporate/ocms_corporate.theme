<?php
/**
 * @file
 * Functions to support theming in the ocms_corporate theme.
 */

use Drupal\Core\Theme\ThemeSettings;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Template\Attribute;
use Drupal\Component\Utility\Html;

/**
 * Implements hook_preprocess_HOOK() for HTML document templates.
 *
 * Adds body classes if certain regions have content.
 */
function ocms_corporate_preprocess_html(&$variables) {
  // Add information about the number of sidebars.
  if (!empty($variables['page']['sidebar_first']) && !empty($variables['page']['sidebar_second'])) {
    $variables['attributes']['class'][] = 'layout-two-sidebars';
  }
  elseif (!empty($variables['page']['sidebar_first'])) {
    $variables['attributes']['class'][] = 'layout-one-sidebar';
    $variables['attributes']['class'][] = 'layout-sidebar-first';
  }
  elseif (!empty($variables['page']['sidebar_second'])) {
    $variables['attributes']['class'][] = 'layout-one-sidebar';
    $variables['attributes']['class'][] = 'layout-sidebar-second';
  }
  else {
    $variables['attributes']['class'][] = 'layout-no-sidebars';
  }

  $color_scheme_library = 'ocms_corporate/color-'.theme_get_setting('color_scheme');
  $variables['#attached']['library'][] = $color_scheme_library;

  // Add class for layout mode on body tag.
  $variables['attributes']['class'][] = theme_get_setting('layout_mode');

  // Add class for forms style on body tag.
  $variables['attributes']['class'][] = theme_get_setting('form_style');

  $headings_font_family = theme_get_setting('headings_font_family');
  $paragraph_font_family = theme_get_setting('paragraph_font_family');
  $sitename_font_family = theme_get_setting('sitename_font_family');
  $slogan_font_family = theme_get_setting('slogan_font_family');

  $variables['attributes']['class'][] = $headings_font_family;
  $variables['attributes']['class'][] = $paragraph_font_family;
  $variables['attributes']['class'][] = $sitename_font_family;
  $variables['attributes']['class'][] = $slogan_font_family;

  //Get the IDs for each font family
  $headings_font_id = substr($headings_font_family, -2);
  $paragraph_font_id = substr($paragraph_font_family, -2);
  $sitename_font_id = substr($sitename_font_family, -2);
  $slogan_font_id = substr($slogan_font_family, -2);

  //Generate the library strings
  $headings_font_library = 'ocms_corporate/fonts-id-'.$headings_font_id;
  $paragraph_font_library = 'ocms_corporate/fonts-id-'.$paragraph_font_id;
  $sitename_font_library = 'ocms_corporate/fonts-id-'.$sitename_font_id;
  $slogan_font_library = 'ocms_corporate/fonts-id-'.$slogan_font_id;

  //Font families with the following IDs are OS specific and should not load an external font
  //13: Georgia
  //21: Helvetica Neue
  //30: Times
  $no_library_array = array('13','21','30');

  //Directly Load the font family libraries if the IDs are not in the $no_library_array
  if (!in_array($headings_font_id, $no_library_array)) {
    $variables['#attached']['library'][] = $headings_font_library;
  }
  if (!in_array($paragraph_font_id, $no_library_array)) {
    $variables['#attached']['library'][] = $paragraph_font_library;
  }
  if (!in_array($sitename_font_id, $no_library_array)) {
    $variables['#attached']['library'][] = $sitename_font_library;
  }
  if (!in_array($slogan_font_id, $no_library_array)) {
    $variables['#attached']['library'][] = $slogan_font_library;
  }

  $variables['#attached']['library'][] = 'ocms_corporate/fonts-sourcecodepro';

  // Load libraries for Animations
  $animations_state = theme_get_setting('animations_state');
  if ($animations_state) {
    $variables['#attached']['library'][] = 'ocms_corporate/animate-global';
    $variables['#attached']['library'][] = 'ocms_corporate/waypoints-init';
  }

  //Load fixed-header library
  $fixed_header = theme_get_setting('fixed_header');
  if ($fixed_header) {
    $variables['attributes']['class'][] = 'fixed-header-enabled';
    $variables['#attached']['library'][] = 'ocms_corporate/fixed-header';
  }

  //get parallax and video bg state
  $parallax_and_video_bg_state = theme_get_setting('parallax_and_video_bg_state');

  //Load parallax effect
  if ($parallax_and_video_bg_state == "parallax" && !empty($variables['page']['highlighted_bottom'])) {
    $variables['#attached']['library'][] = 'ocms_corporate/parallax-init';
    $variables['attributes']['class'][] = 'parallax-active';
  }

  //Load video background
  if ($parallax_and_video_bg_state == "video" && !empty($variables['page']['highlighted_bottom'])) {
    $variables['#attached']['library'][] = 'ocms_corporate/video-background-init';
  }

  //Load transparent-header library
  $transparent_header_state = theme_get_setting('transparent_header_state');
  if ($transparent_header_state) {
    $variables['attributes']['class'][] = 'transparent-header-active';
  }
}

function ocms_corporate_preprocess_breadcrumb(&$variables){
  $variables['mt_setting']['breadcrumb_separator'] = theme_get_setting('breadcrumb_separator');

  if($variables['breadcrumb']){
    $request = \Drupal::request();
    $route_match = \Drupal::routeMatch();
    $page_title = \Drupal::service('title_resolver')->getTitle($request, $route_match->getRouteObject());
    if (!empty($page_title)) {
      $variables['breadcrumb'][] = array(
        'text' => $page_title
      );
      // Add cache context based on url.
      $variables['#cache']['contexts'][] = 'url';
    }
  }
}

/**
 * Implements hook_preprocess_HOOK() for page templates.
 */
function ocms_corporate_preprocess_page_title(&$variables) {
  // Since the title and the shortcut link are both block level elements,
  // positioning them next to each other is much simpler with a wrapper div.
  if (!empty($variables['title_suffix']['add_or_remove_shortcut']) && $variables['title']) {
    // Add a wrapper div using the title_prefix and title_suffix render
    // elements.
    $variables['title_prefix']['shortcut_wrapper'] = array(
      '#markup' => '<div class="shortcut-wrapper clearfix">',
      '#weight' => 100,
    );
    $variables['title_suffix']['shortcut_wrapper'] = array(
      '#markup' => '</div>',
      '#weight' => -99,
    );
    // Make sure the shortcut link is the first item in title_suffix.
    $variables['title_suffix']['add_or_remove_shortcut']['#weight'] = -100;
  }
}

function ocms_corporate_preprocess_page(&$variables) {

  $sidebar_first = $variables['page']['sidebar_first'];
  $sidebar_second = $variables['page']['sidebar_second'];
  $content_bottom_first = $variables['page']['content_bottom_first'];
  $content_bottom_second = $variables['page']['content_bottom_second'];
  $footer_top_first = $variables['page']['footer_top_first'];
  $footer_top_second = $variables['page']['footer_top_second'];
  $footer_first = $variables['page']['footer_first'];
  $footer_second = $variables['page']['footer_second'];
  $footer_third = $variables['page']['footer_third'];
  $footer_fourth = $variables['page']['footer_fourth'];
  $subfooter_second = $variables['page']['footer'];
  $subfooter_first = $variables['page']['sub_footer_first'];


  // Insert variables into the page template.

  // Header
  $variables['header_layout_container'] = theme_get_setting('header_layout_container');
  $header_first = $variables['page']['header_first'];
  $header = $variables['page']['header'];
  $navigation = $variables['page']['navigation'];
  $search_area = $variables['page']['search_area'];

  if (($header_first && !$header && ($navigation || $search_area)) || (!$header_first && $header && ($navigation || $search_area))) {
    $variables['header_layout_columns_class'] = 'two-columns';
    if ($variables['header_layout_container'] == 'container-fluid') {
      $variables['header_first_grid_class'] = 'col-md-4 col-lg-3';
      $variables['header_second_grid_class'] = 'col-md-4 col-lg-3';
      $variables['header_third_grid_class'] = 'col-md-8 col-lg-9';
    } else {
      $variables['header_first_grid_class'] = 'col-md-4';
      $variables['header_second_grid_class'] = 'col-md-4';
      $variables['header_third_grid_class'] = 'col-md-8';
    }
  } else if ($header_first && $header) {
    if ($navigation || $search_area) {
      $variables['header_layout_columns_class'] = 'three-columns';
      $variables['header_first_grid_class'] = 'col-md-4 col-sm-12';
      $variables['header_second_grid_class'] = 'col-md-4 col-sm-12';
      $variables['header_third_grid_class'] = 'col-md-4 col-sm-12';
    } else {
      $variables['header_layout_columns_class'] = 'two-columns';
      $variables['header_first_grid_class'] = 'col-md-4';
      $variables['header_second_grid_class'] = 'col-md-8';
    }
  } else {
    $variables['header_layout_columns_class'] = 'one-column';
    $variables['header_first_grid_class'] = 'col-xs-12';
    $variables['header_second_grid_class'] = 'col-xs-12';
    $variables['header_third_grid_class'] = 'col-xs-12';
  }

  if ($variables['header_layout_container'] == 'container-fluid') {
    $variables['header_layout_container_class'] = 'full-width';
  } else {
    $variables['header_layout_container_class'] = 'fixed-width';
  }

  // Content Top
  $variables['content_top_layout_container'] = theme_get_setting('content_top_layout_container');

  // Main Content Layout
  if($sidebar_first && $sidebar_second) {
    $variables['main_grid_class'] = 'col-md-6 col-md-push-3';
    $variables['sidebar_first_grid_class'] = 'col-md-3 col-md-pull-6';
    $variables['sidebar_second_grid_class'] = 'col-md-3';
  } elseif ($sidebar_first && !$sidebar_second) {
    $variables['main_grid_class'] = 'col-md-8 col-md-push-4';
    $variables['sidebar_first_grid_class'] = 'col-md-4 col-md-pull-8 fix-sidebar-first';
    $variables['sidebar_second_grid_class'] = '';
  } elseif (!$sidebar_first && $sidebar_second) {
    $variables['main_grid_class'] = 'col-md-8';
    $variables['sidebar_first_grid_class'] = '';
    $variables['sidebar_second_grid_class'] = 'col-md-4 fix-sidebar-second';
  } else {
    $variables['main_grid_class'] = 'col-md-12';
    $variables['sidebar_first_grid_class'] = '';
    $variables['sidebar_second_grid_class'] = '';
  }

  // Content Bottom
  if($content_bottom_second && $content_bottom_first) {
    $variables['content_bottom_first_grid_class'] = 'col-md-5';
    $variables['content_bottom_second_grid_class'] = 'col-md-5 col-md-offset-2';
  } elseif ($content_bottom_second || $content_bottom_first) {
    $variables['content_bottom_first_grid_class'] = 'col-md-12';
    $variables['content_bottom_second_grid_class'] = 'col-md-12';
  }

  // Featured Top
  $variables['featured_top_layout_container'] = theme_get_setting('featured_top_layout_container');

  // Featured
  $variables['featured_layout_container'] = theme_get_setting('featured_layout_container');

  // Featured Bottom
  $variables['featured_bottom_layout_container'] = theme_get_setting('featured_bottom_layout_container');

  // Highlighted
  $variables['highlighted_layout_container'] = theme_get_setting('highlighted_layout_container');

  // Highlighted Bottom
  $variables['highlighted_bottom_layout_container'] = theme_get_setting('highlighted_bottom_layout_container');

  // Footer Top
  if($footer_top_first && $footer_top_second) {
    $variables['footer_top_regions'] = 'two-regions';
    $variables['footer_top_first_grid_class'] = 'col-sm-6';
    $variables['footer_top_second_grid_class'] = 'col-sm-6';
  } elseif ($footer_top_second || $footer_top_first) {
    $variables['footer_top_regions'] = 'one-region';
    $variables['footer_top_first_grid_class'] = 'col-md-12';
    $variables['footer_top_second_grid_class'] = 'col-md-12';
  }

  // Footer Layout
  $variables['footer_layout_container'] = theme_get_setting('footer_layout_container');

  if ($footer_first && $footer_second && $footer_third && $footer_fourth) {
    $variables['footer_grid_class'] = 'col-sm-6 col-md-3';
  } elseif ((!$footer_first && $footer_second && $footer_third && $footer_fourth) || ($footer_first && !$footer_second && $footer_third && $footer_fourth)
    || ($footer_first && $footer_second && !$footer_third && $footer_fourth) || ($footer_first && $footer_second && $footer_third && !$footer_fourth)) {
    $variables['footer_grid_class'] = 'col-sm-4';
  } elseif ((!$footer_first && !$footer_second && $footer_third && $footer_fourth) || (!$footer_first && $footer_second && !$footer_third && $footer_fourth)
    || (!$footer_first && $footer_second && $footer_third && !$footer_fourth) || ($footer_first && !$footer_second && !$footer_third && $footer_fourth)
    || ($footer_first && !$footer_second && $footer_third && !$footer_fourth) || ($footer_first && $footer_second && !$footer_third && !$footer_fourth)) {
    $variables['footer_grid_class'] = 'col-sm-6';
  } else {
    $variables['footer_grid_class'] = 'col-sm-12';
  }

  // Subfooter
  $variables['subfooter_layout_container'] = theme_get_setting('subfooter_layout_container');

  if($subfooter_second && $subfooter_first) {
    $variables['subfooter_first_grid_class'] = 'col-md-6';
    $variables['subfooter_second_grid_class'] = 'col-md-6';
  } elseif ($subfooter_second || $subfooter_first) {
    $variables['subfooter_second_grid_class'] = 'col-md-12 text-center';
    $variables['subfooter_first_grid_class'] = 'col-md-12 text-center';
  }

  // Animations
  $animations_state = theme_get_setting('animations_state');
  $variables['content_top_animation_effect'] = theme_get_setting('content_top_animation_effect');
  if ($animations_state && $variables['content_top_animation_effect'] != "no-animation") {
    $variables['content_top_animations'] = "enabled";
  } else {
    $variables['content_top_animations'] = "disabled";
  }

  $variables['main_content_animation_effect'] = theme_get_setting('main_content_animation_effect');
  if ($animations_state && $variables['main_content_animation_effect'] != "no-animation") {
    $variables['main_content_animations'] = "enabled";
  } else {
    $variables['main_content_animations'] = "disabled";
  }

  $variables['sidebar_first_animation_effect'] = theme_get_setting('sidebar_first_animation_effect');
  if ($animations_state && $variables['sidebar_first_animation_effect'] != "no-animation") {
    $variables['sidebar_first_animations'] = "enabled";
  } else {
    $variables['sidebar_first_animations'] = "disabled";
  }

  $variables['sidebar_second_animation_effect'] = theme_get_setting('sidebar_second_animation_effect');
  if ($animations_state && $variables['sidebar_second_animation_effect'] != "no-animation") {
    $variables['sidebar_second_animations'] = "enabled";
  } else {
    $variables['sidebar_second_animations'] = "disabled";
  }

  $variables['content_bottom_animation_effect'] = theme_get_setting('content_bottom_animation_effect');
  if ($animations_state && $variables['content_bottom_animation_effect'] != "no-animation") {
    $variables['content_bottom_animations'] = "enabled";
  } else {
    $variables['content_bottom_animations'] = "disabled";
  }

  $variables['featured_top_animation_effect'] = theme_get_setting('featured_top_animation_effect');
  if ($animations_state && $variables['featured_top_animation_effect'] != "no-animation") {
    $variables['featured_top_animations'] = "enabled";
  } else {
    $variables['featured_top_animations'] = "disabled";
  }

  $variables['featured_animation_effect'] = theme_get_setting('featured_animation_effect');
  if ($animations_state && $variables['featured_animation_effect'] != "no-animation") {
    $variables['featured_animations'] = "enabled";
  } else {
    $variables['featured_animations'] = "disabled";
  }

  $variables['featured_bottom_animation_effect'] = theme_get_setting('featured_bottom_animation_effect');
  if ($animations_state && $variables['featured_bottom_animation_effect'] != "no-animation") {
    $variables['featured_bottom_animations'] = "enabled";
  } else {
    $variables['featured_bottom_animations'] = "disabled";
  }

  $variables['highlighted_animation_effect'] = theme_get_setting('highlighted_animation_effect');
  if ($animations_state && $variables['highlighted_animation_effect'] != "no-animation") {
    $variables['highlighted_animations'] = "enabled";
  } else {
    $variables['highlighted_animations'] = "disabled";
  }

  $variables['highlighted_bottom_animation_effect'] = theme_get_setting('highlighted_bottom_animation_effect');
  if ($animations_state && $variables['highlighted_bottom_animation_effect'] != "no-animation") {
    $variables['highlighted_bottom_animations'] = "enabled";
  } else {
    $variables['highlighted_bottom_animations'] = "disabled";
  }

  $variables['footer_top_animation_effect'] = theme_get_setting('footer_top_animation_effect');
  if ($animations_state && $variables['footer_top_animation_effect'] != "no-animation") {
    $variables['footer_top_animations'] = "enabled";
  } else {
    $variables['footer_top_animations'] = "disabled";
  }

  $variables['footer_animation_effect'] = theme_get_setting('footer_animation_effect');
  if ($animations_state && $variables['footer_animation_effect'] != "no-animation") {
    $variables['footer_animations'] = "enabled";
  } else {
    $variables['footer_animations'] = "disabled";
  }

  // Region Background Color
  $variables['content_top_background_color'] = theme_get_setting('content_top_background_color');
  $variables['content_bottom_background_color'] = theme_get_setting('content_bottom_background_color');
  $variables['featured_top_background_color'] = theme_get_setting('featured_top_background_color');
  $variables['featured_background_color'] = theme_get_setting('featured_background_color');
  $variables['featured_bottom_background_color'] = theme_get_setting('featured_bottom_background_color');
  $variables['highlighted_background_color'] = theme_get_setting('highlighted_background_color');
  $variables['highlighted_bottom_background_color'] = theme_get_setting('highlighted_bottom_background_color');
  $variables['footer_top_background_color'] = theme_get_setting('footer_top_background_color');
  $variables['footer_background_color'] = theme_get_setting('footer_background_color');
  $variables['subfooter_background_color'] = theme_get_setting('subfooter_background_color');

  //Load to-top library
  $variables['scroll_to_top'] = theme_get_setting('scrolltop_display');
  if ($variables['scroll_to_top']) {
    $variables['#attached']['library'][] = 'ocms_corporate/to-top';
    $variables['scroll_to_top_icon'] = theme_get_setting('scrolltop_icon');
  }
}

function ocms_corporate_page_attachments_alter(&$page) {

  // Slideshow's caption Opacity
  $slideshow_caption_opacity = (int) theme_get_setting('rs_slideshow_caption_opacity')/100;

  $page['#attached']['drupalSettings']['ocms_corporate']['slideshowCaptionOpacity'] = $slideshow_caption_opacity;

  // Full Width Slideshow
  $slideshow_fullwidth_effect_time = (int) theme_get_setting('rs_slideshow_fullwidth_effect_time')*1000;
  $slideshow_fullwidth_initial_height = (int) theme_get_setting('rs_slideshow_fullwidth_initial_height');
  $slideshow_fullwidth_bullets_position = theme_get_setting('rs_slideshow_fullwidth_bullets_position');

  $page['#attached']['drupalSettings']['ocms_corporate']['sliderRevolutionFullWidthInit']['slideshowFullWidthEffectTime'] = $slideshow_fullwidth_effect_time;
  $page['#attached']['drupalSettings']['ocms_corporate']['sliderRevolutionFullWidthInit']['slideshowFullWidthInitialHeight'] = $slideshow_fullwidth_initial_height;
  $page['#attached']['drupalSettings']['ocms_corporate']['sliderRevolutionFullWidthInit']['slideshowFullWidthBulletsPosition'] = $slideshow_fullwidth_bullets_position;

  // Full Screen Slideshow
  $slideshow_fullscreen_effect_time = (int) theme_get_setting('rs_slideshow_fullscreen_effect_time')*1000;
  $slideshow_fullscreen_bullets_position = theme_get_setting('rs_slideshow_fullscreen_bullets_position');

  $page['#attached']['drupalSettings']['ocms_corporate']['sliderRevolutionFullScreenInit']['slideshowFullScreenEffectTime'] = $slideshow_fullscreen_effect_time;
  $page['#attached']['drupalSettings']['ocms_corporate']['sliderRevolutionFullScreenInit']['slideshowFullScreenBulletsPosition'] = $slideshow_fullscreen_bullets_position;

  // Boxed Width Slideshow
  $slideshow_boxedwidth_effect_time = (int) theme_get_setting('rs_slideshow_boxedwidth_effect_time')*1000;
  $slideshow_boxedwidth_initial_height = (int) theme_get_setting('rs_slideshow_boxedwidth_initial_height');
  $slideshow_boxedwidth_bullets_position = theme_get_setting('rs_slideshow_boxedwidth_bullets_position');

  $page['#attached']['drupalSettings']['ocms_corporate']['sliderRevolutionBoxedWidthInit']['slideshowBoxedWidthEffectTime'] = $slideshow_boxedwidth_effect_time;
  $page['#attached']['drupalSettings']['ocms_corporate']['sliderRevolutionBoxedWidthInit']['slideshowBoxedWidthInitialHeight'] = $slideshow_boxedwidth_initial_height;
  $page['#attached']['drupalSettings']['ocms_corporate']['sliderRevolutionBoxedWidthInit']['slideshowBoxedWidthBulletsPosition'] = $slideshow_boxedwidth_bullets_position;

  // Internal Banner Slideshow
  $slideshow_internal_banner_effect_time = (int) theme_get_setting('rs_slideshow_internal_effect_time')*1000;
  $slideshow_internal_banner_initial_height = (int) theme_get_setting('rs_slideshow_internal_initial_height');
  $slideshow_internal_banner_bullets_position = theme_get_setting('rs_slideshow_internal_bullets_position');

  $page['#attached']['drupalSettings']['ocms_corporate']['sliderRevolutionInternalBannerInit']['slideshowInternalBannerEffectTime'] = $slideshow_internal_banner_effect_time;
  $page['#attached']['drupalSettings']['ocms_corporate']['sliderRevolutionInternalBannerInit']['slideshowInternalBannerInitialHeight'] = $slideshow_internal_banner_initial_height;
  $page['#attached']['drupalSettings']['ocms_corporate']['sliderRevolutionInternalBannerInit']['slideshowInternalBannerBulletsPosition'] = $slideshow_internal_banner_bullets_position;

  // Testimonials carousel
  $owl_testimonials_autoplay = theme_get_setting('owl_testimonials_autoplay');
  if ($owl_testimonials_autoplay) {
    $owl_testimonials_effect_time = (int) theme_get_setting('owl_testimonials_effect_time')*1000;
  } else {
    $owl_testimonials_effect_time = false;
  }

  $page['#attached']['drupalSettings']['ocms_corporate']['owlCarouselTestimonialsInit']['owlTestimonialsEffectTime'] = $owl_testimonials_effect_time;

  //Testimonials slider
  $testimonials_slider_effect = theme_get_setting('testimonial_slideshow_effect');
  $testimonials_slider_effect_time = theme_get_setting('testimonial_slideshow_effect_time')*1000;

  $page['#attached']['drupalSettings']['ocms_corporate']['flexsliderTestimonialsInit']['TestimonialsSliderEffect'] = $testimonials_slider_effect;
  $page['#attached']['drupalSettings']['ocms_corporate']['flexsliderTestimonialsInit']['TestimonialsSliderEffectTime'] = $testimonials_slider_effect_time;

  //In page slider
  $in_page_slider_effect = theme_get_setting('in_page_slider_effect');

  $page['#attached']['drupalSettings']['ocms_corporate']['flexsliderInPageInit']['inPageSliderEffect'] = $in_page_slider_effect;

  // Companies carousel
  $owl_companies_autoplay = theme_get_setting('owl_companies_autoplay');
  if ($owl_companies_autoplay) {
    $owl_companies_effect_time = (int) theme_get_setting('owl_companies_effect_time')*1000;
  } else {
    $owl_companies_effect_time = false;
  }

  $page['#attached']['drupalSettings']['ocms_corporate']['owlCarouselCompaniesInit']['owlCompaniesEffectTime'] = $owl_companies_effect_time;

  // Promoted Posts carousel
  $owl_posts_autoplay = theme_get_setting('owl_posts_autoplay');
  if ($owl_posts_autoplay) {
    $owl_posts_effect_time = (int) theme_get_setting('owl_posts_effect_time')*1000;
  } else {
    $owl_posts_effect_time = false;
  }

  $page['#attached']['drupalSettings']['ocms_corporate']['owlCarouselPromotedPostsInit']['owlPostsEffectTime'] = $owl_posts_effect_time;

  // Team carousel
  $owl_team_autoplay = theme_get_setting('owl_team_autoplay');
  if ($owl_team_autoplay) {
    $owl_team_effect_time = (int) theme_get_setting('owl_team_effect_time')*1000;
  } else {
    $owl_team_effect_time = false;
  }

  $page['#attached']['drupalSettings']['ocms_corporate']['owlCarouselTeamInit']['owlTeamEffectTime'] = $owl_team_effect_time;

  // Transparent Header Opacity
  $transparent_header_opacity = (int) theme_get_setting('transparent_header_opacity')/100;

  $page['#attached']['drupalSettings']['ocms_corporate']['transparentHeader']['transparentHeaderOpacity'] = $transparent_header_opacity;

  // Parallax and video bg opacity
  $parallax_and_video_bg_opacity = (int) theme_get_setting('parallax_and_video_bg_opacity')/100;
  $page['#attached']['drupalSettings']['ocms_corporate']['ParallaxAndVideoBg']['ParallaxAndVideoBgOpacity'] = $parallax_and_video_bg_opacity;

  //video bg
  $path_to_video_mp4 = file_create_url(drupal_get_path('theme', 'ocms_corporate') . '/videos/background-video.mp4');
  $path_to_video_webm = file_create_url(drupal_get_path('theme', 'ocms_corporate') . '/videos/background-video.webm');
  $path_to_video_jpg = file_create_url(drupal_get_path('theme', 'ocms_corporate') . '/videos/background-video.jpg');

  $page['#attached']['drupalSettings']['ocms_corporate']['VideoBackgroundInit']['PathToVideo_mp4'] = $path_to_video_mp4;
  $page['#attached']['drupalSettings']['ocms_corporate']['VideoBackgroundInit']['PathToVideo_webm'] = $path_to_video_webm;
  $page['#attached']['drupalSettings']['ocms_corporate']['VideoBackgroundInit']['pathToVideo_jpg'] = $path_to_video_jpg;

  // Isotope Filters
  $isotope_filters_text = theme_get_setting('isotope_filters_text');

  $page['#attached']['drupalSettings']['ocms_corporate']['isotopeFiltersMasonryInit']['isotopeFiltersText'] = $isotope_filters_text;

  // Node side affix
  $affix_admin_height = (int) theme_get_setting('affix_admin_height');
  $affix_fixedHeader_height = (int) theme_get_setting('affix_fixedHeader_height');

  $page['#attached']['drupalSettings']['ocms_corporate']['nodeSideAffix']['affixAdminHeigth'] = $affix_admin_height;
  $page['#attached']['drupalSettings']['ocms_corporate']['nodeSideAffix']['affixFixedHeaderHeigth'] = $affix_fixedHeader_height;
}

function ocms_corporate_library_info_build() {
  $google_maps_key = theme_get_setting('google_maps_key');
  if (!empty($google_maps_key)) {
    $google_maps_key_string = '&key='.$google_maps_key;
  } else {
    $google_maps_key_string = '';
  }
  $libraries = [];
  $libraries['google-maps-dynamic'] = [
    'version' => '3',
    'remote' => 'https://maps.googleapis.com/maps/api/js',
    'js' => [
      'https://maps.googleapis.com/maps/api/js?v=3'.$google_maps_key_string => [
        'scope' => ['footer'],
      ],
    ],
    'license' => [
      'name' => ['Google Terms of Service'],
      'url' => ['https://developers.google.com/maps/terms'],
    ],
  ];
  return $libraries;
}

/**
 * Implements hook_preprocess_HOOK() for node.html.twig.
 */
function ocms_corporate_preprocess_node(&$variables) {
  // Remove the "Add new comment" link on teasers or when the comment form is
  // displayed on the page.
  if ($variables['teaser'] || !empty($variables['content']['comments']['comment_form'])) {
    unset($variables['content']['links']['comment']['#links']['comment-add']);
  }

  if (isset($variables['node']->comment)) {
    $comment_count = $variables['node']->get('comment')->__get('comment_count');
    if ($comment_count) {
      $variables['comment_count'] = $comment_count;
    } else {
      $variables['comment_count'] = "0";
    }
  }

}

function ocms_corporate_preprocess_node__ocms_showcase(&$variables) {
  if (isset($variables['content']['field_ocms_company_logo']['#theme'])){
    $variables['has_ocms_company_logo'] = true;
  } else {
    $variables['has_ocms_company_logo'] = false;
  }
  if (isset($variables['content']['field_ocms_company_title']['#theme'])){
    $variables['has_ocms_company_title'] = true;
  } else {
    $variables['has_ocms_company_title'] = false;
  }
  if (isset($variables['content']['field_ocms_company_description']['#theme'])){
    $variables['has_ocms_company_description'] = true;
  } else {
    $variables['has_ocms_company_description'] = false;
  }
}

function ocms_corporate_preprocess_node__article(&$variables) {
  $variables['mt_setting']['reading_time'] = theme_get_setting('reading_time');
  $variables['mt_setting']['post_progress'] = theme_get_setting('post_progress');

  // Count the words of article in order to calculate the reading time
  $node_content = $variables['content'];
  $node_content = render($node_content);
  $words = str_word_count(strip_tags($node_content));
  if (isset($variables['content']['comment'])) {
    $node_comments = $variables['content']['comment'];
    $node_comments = render($node_comments);
    $words = $words - str_word_count(strip_tags($node_comments));
  }
  $variables['minutes'] = floor($words / 275);
}

/**
 * Implements hook_preprocess_HOOK() for block.html.twig.
 */
function ocms_corporate_preprocess_block(&$variables) {
  // Add a clearfix class to system branding blocks.
  if ($variables['plugin_id'] == 'system_branding_block') {
    $variables['attributes']['class'][] = 'clearfix';
  }
}

/**
 * Implements hook_preprocess_HOOK() for field--block-content--ocms-google-maps.html.twig.
 */
function ocms_corporate_preprocess_field__block_content__ocms_google_maps(&$variables) {
  $variables['#attached']['library'][] = 'ocms_corporate/google-maps-init';
  $variables['field_ocms_latitude_value'] = $variables['element']['#object']->get('field_ocms_latitude')->first()->getValue()['value'];
  $variables['field_ocms_longitude_value'] = $variables['element']['#object']->get('field_ocms_longitude')->first()->getValue()['value'];
  $variables['field_ocms_map_zoom_value'] = $variables['element']['#object']->get('field_ocms_map_zoom')->first()->getValue()['value'];
}

/**
 * Implements hook_preprocess_HOOK() for menu.html.twig.
 */
function ocms_corporate_preprocess_menu(&$variables) {
  $variables['attributes']['class'][] = 'clearfix';
}

/**
 * Implements hook_preprocess_HOOK() for full width slideshow.
 */
function ocms_corporate_preprocess_views_view_list__ocms_slideshow_full_width__block(&$variables) {
  $variables['mt_setting']['rs_slideshow_fullwidth_effect'] = theme_get_setting('rs_slideshow_fullwidth_effect');
}

/**
 * Implements hook_preprocess_HOOK() for full screen slideshow.
 */
function ocms_corporate_preprocess_views_view_list__ocms_slideshow_full_screen__block(&$variables) {
  $variables['mt_setting']['rs_slideshow_fullscreen_effect'] = theme_get_setting('rs_slideshow_fullscreen_effect');
  //Load transparent-header library
  $transparent_header_state = theme_get_setting('transparent_header_state');
  if ($transparent_header_state) {
    $variables['#attached']['library'][] = 'ocms_corporate/transparent-header';
  }
}

/**
 * Implements hook_preprocess_HOOK() for boxed width slideshow.
 */
function ocms_corporate_preprocess_views_view_list__ocms_slideshow_boxed_width__block(&$variables) {
  $variables['mt_setting']['rs_slideshow_boxedwidth_effect'] = theme_get_setting('rs_slideshow_boxedwidth_effect');
}

/**
 * Implements hook_preprocess_HOOK() for internal banner slideshow.
 */
function ocms_corporate_preprocess_views_view_list__ocms_internal_banner__block(&$variables) {
  $variables['mt_setting']['rs_slideshow_internal_effect'] = theme_get_setting('rs_slideshow_internal_effect');
}

/**
 * Implements hook_preprocess_HOOK() for services masonry alternative layout.
 */
function ocms_corporate_preprocess_views_view_list__ocms_services_masonry_layout_alt(&$variables) {
  $variables['#attached']['library'][] = 'ocms_corporate/isotope-masonry-init';
}

/**
 * Implements hook_preprocess_HOOK() for services masonry layout.
 */
function ocms_corporate_preprocess_views_view_list__ocms_services_masonry_layout(&$variables) {
  $variables['#attached']['library'][] = 'ocms_corporate/isotope-masonry-init';
}

/**
 * Implements hook_preprocess_HOOK() for products masonry layout.
 */
function ocms_corporate_preprocess_views_view_list__ocms_products_masonry_layout(&$variables) {
  $variables['#attached']['library'][] = 'ocms_corporate/isotope-masonry-init';
}

/**
 * Implements hook_preprocess_HOOK() for masonry isotope layout.
 */
function ocms_corporate_preprocess_views_view_list__ocms_masonry_isotope(&$variables) {
  $variables['#attached']['library'][] = 'ocms_corporate/isotope-filters-masonry-init';
}

/**
 * Implements hook_preprocess_HOOK() for showcases masonry layout.
 */
function ocms_corporate_preprocess_views_view_list__ocms_showcases_masonry_layout(&$variables) {
  $variables['#attached']['library'][] = 'ocms_corporate/isotope-masonry-init';
}

/**
 * Implements hook_preprocess_HOOK() for posts masonry layout.
 */
function ocms_corporate_preprocess_views_view_list__ocms_posts_masonry_layout(&$variables) {
  $variables['#attached']['library'][] = 'ocms_corporate/isotope-masonry-init';
}

/**
 * Implements hook_preprocess_HOOK() for testimonials carousel.
 */
function ocms_corporate_preprocess_views_view_list__ocms_testimonials_carousel(&$variables) {
  $variables['#attached']['library'][] = 'ocms_corporate/owl-carousel-testimonials-init';
}

/**
 * Implements hook_preprocess_HOOK() for testimonials slider.
 */
function ocms_corporate_preprocess_views_view_list__ocms_testimonials_slider(&$variables) {
  $variables['#attached']['library'][] = 'ocms_corporate/flexslider-testimonials-init';
}

/**
 * Implements hook_preprocess_HOOK() for companies carousel.
 */
function ocms_corporate_preprocess_views_view_list__ocms_companies_carousel(&$variables) {
  $variables['#attached']['library'][] = 'ocms_corporate/owl-carousel-companies-init';
}

/**
 * Implements hook_preprocess_HOOK() for team promoted posts.
 */
function ocms_corporate_preprocess_views_view_list__ocms_promoted_posts_carousel(&$variables) {
  $variables['#attached']['library'][] = 'ocms_corporate/owl-carousel-promoted-posts-init';
}

/**
 * Implements hook_preprocess_HOOK() for team carousel.
 */
function ocms_corporate_preprocess_views_view_list__ocms_team_members_carousel(&$variables) {
  $variables['#attached']['library'][] = 'ocms_corporate/owl-carousel-team-init';
}

/**
 * Implements hook_preprocess_HOOK() for navigation search form.
 */
function ocms_corporate_preprocess_block__ocms_navigation_search(&$variables) {
  $variables['#attached']['library'][] = 'ocms_corporate/navigation-search';
}

/**
 * Implements hook_theme_suggestions_HOOK_alter() for form templates.
 */
function ocms_corporate_theme_suggestions_form_alter(array &$suggestions, array $variables) {
  if ($variables['element']['#form_id'] == 'search_block_form') {
    $suggestions[] = 'form__search_block_form';
  }
}

/**
 * Implements hook_form_alter() to add classes to the search form.
 */
function ocms_corporate_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  if (in_array($form_id, ['search_block_form', 'search_form'])) {
    $key = ($form_id == 'search_block_form') ? 'actions' : 'basic';
    if (!isset($form[$key]['submit']['#attributes'])) {
      $form[$key]['submit']['#attributes'] = new Attribute();
    }
    $form[$key]['submit']['#attributes']->addClass('search-form__submit');
    $form['keys']['#attributes']['placeholder'] = t('Search...');
  }
}

function ocms_corporate_preprocess_field(&$variables) {
  $element = $variables['element'];
  $variables['view_mode'] = $element['#view_mode']; //Expose node view_mode to field templates
}

function ocms_corporate_preprocess_field__entity_reference(&$variables) {
  $variables['entity_reference_target_type'] = $variables['element']['#items']->getItemDefinition()->getSetting('target_type');
}

function ocms_corporate_preprocess_field__block_content__ocms_tabs_block(&$variables){
  $variables['entity_reference_target_type'] = $variables['element']['#items']->getItemDefinition()->getSetting('target_type');
  $block_uuid = $variables['element']['#object']->toArray()['uuid'][0]['value'];
  $blocks = $variables['element']['#items']->referencedEntities();
  if (isset($blocks)) {
    foreach ($blocks as $key => $block) {
      $variables['items'][$key]['block_data']['label'] = $block->label();
      if (!empty($block_uuid)) {
        $variables['items'][$key]['block_data']['id'] = Html::getUniqueId($block_uuid."-".$key);
      } else {
        $variables['items'][$key]['block_data']['id'] = Html::getUniqueId($block->id());
      }
      $variables['items'][$key]['block_data']['active'] = ($key == 0 ? "active" : "");
    }
  }
}

function ocms_corporate_theme_suggestions_image_formatter_alter(array &$suggestions, array $variables) {
  $entity = $variables['item']->getEntity();
  $field_name = $variables['item']->getParent()->getName();
  if (isset($entity) && isset($field_name)) {
    $suggestions[] = 'image_formatter__' . $entity->getEntityTypeId() . '__' . $field_name;
    $suggestions[] = 'image_formatter__' . $entity->getEntityTypeId() . '__' . $entity->bundle() . '__' . $field_name;
  }
}
