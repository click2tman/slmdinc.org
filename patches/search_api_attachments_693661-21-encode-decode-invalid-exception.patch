diff --git a/src/Plugin/search_api_attachments/SolrExtractor.php b/src/Plugin/search_api_attachments/SolrExtractor.php
index c807cd8..1253468 100644
--- a/src/Plugin/search_api_attachments/SolrExtractor.php
+++ b/src/Plugin/search_api_attachments/SolrExtractor.php
@@ -73,16 +73,21 @@ class SolrExtractor extends TextExtractorPluginBase {
     // Extract the content.
     $xml_data = $backend->extractContentFromFile($filepath);
 
-    // We need to get only what is in body tag.
-    $xmlencoder = new XmlEncoder();
-    $dom_data = $xmlencoder->decode($xml_data, 'xml');
-    $dom_data = $dom_data['body'];
-
-    $htmlencoder = new XmlEncoder();
-    $htmlencoder = $htmlencoder->encode($dom_data, 'xml');
+    return self::extractBody($xml_data);
+  }
 
-    $body = strip_tags($htmlencoder);
-    return $body;
+  /**
+   * Extract the body from XML response.
+   */
+  public static function extractBody($xml_data) {
+     if (!preg_match(',<body[^>]*>(.*)</body>,sim', $xml_data, $matches)) {
+       // If the body can't be found return just the text. This will be safe
+       // and contain any text to index.
+       return strip_tags($xml_data);
+    }
+    // Return the full content of the body. Including tags that can optionally
+    // be used for index weight.
+    return $matches[1];
   }
 
   /**
diff --git a/tests/src/Unit/ExtractBody.php b/tests/src/Unit/ExtractBody.php
new file mode 100644
index 0000000..7e10551
--- /dev/null
+++ b/tests/src/Unit/ExtractBody.php
@@ -0,0 +1,110 @@
+<?php
+
+namespace Drupal\Tests\search_api_attachments\Unit;
+
+use Drupal\search_api_attachments\Plugin\search_api_attachments\SolrExtractor;
+use Drupal\Tests\UnitTestCase;
+
+/**
+ * Tests extracting body text from xml.
+ *
+ * @covers \Drupal\search_api_attachments\Plugin\search_api_attachments\SolrExtractor::extractBody
+ *
+ * @group search_api_attachments
+ */
+class ExtractBody extends UnitTestCase {
+
+  /**
+   * Tests setting the Values.
+   *
+   * @dataProvider xmlstringProvider
+   */
+  public function testSetValues($xml, $expected) {
+    $text = SolrExtractor::extractBody($xml);
+    $this->assertEquals($text, $expected);
+  }
+
+  /**
+   * XML and extracted body.
+   *
+   * @see testSetValue()
+   */
+  public function xmlstringProvider() {
+    return [
+      // Simple.
+      ["<?xml?><html><head><title>ABC</title></head><body>No Tags</body></html>", "No Tags"],
+      // UTF-8.
+      ["<?xml?><html><head><title>ÄΒℂ</title></head><body>body ⊂ xml</body></html>", "body ⊂ xml"],
+      // Tags.
+      ["<?xml?><html><head><title>ABC</title></head><body><p>Text <em>with</em> Tags</p></body></html>", "<p>Text <em>with</em> Tags</p>"],
+      // Body with attributes, and newlines.
+      ["<?xml?><html><head><title>ABC</title></head><body attribute=\"value\"><p>Text\n <em>with</em>\n Tags</p></body></html>", "<p>Text\n <em>with</em>\n Tags</p>"],
+      // Fall-back.
+      ["<?xml?><custom><tag>Just strip everything and leave text</tag></custom>", "Just strip everything and leave text"],
+      // Actual example.
+      [
+        '<?xml version="1.0" encoding="UTF-8"?>
+<html xmlns="http://www.w3.org/1999/xhtml">
+<head>
+<meta
+name="stream_size" content="22362"/>
+<meta name="pdf:PDFVersion"
+content="1.4"/>
+<meta name="X-Parsed-By"
+            content="org.apache.tika.parser.DefaultParser"/>
+<meta
+name="X-Parsed-By"
+            content="org.apache.tika.parser.pdf.PDFParser"/>
+<meta
+name="xmp:CreatorTool" content="Writer"/>
+<meta
+name="stream_content_type" content="application/octet-stream"/>
+<meta
+name="meta:creation-date" content="2015-09-10T17:53:51Z"/>
+<meta
+name="stream_source_info" content="content"/>
+<meta name="created"
+            content="Thu Sep 10 17:53:51 UTC 2015"/>
+<meta
+name="xmpTPg:NPages" content="1"/>
+<meta name="Creation-Date"
+content="2015-09-10T17:53:51Z"/>
+<meta name="resourceName"
+            content="search_api_attachments_test_extraction.pdf"/>
+<meta
+name="dcterms:created" content="2015-09-10T17:53:51Z"/>
+<meta
+name="dc:format" content="application/pdf; version=1.4"/>
+<meta
+name="stream_name"
+            content="/var/www/d8/fpp/fpp/web/sites/default/files/search_api_attachments_test_extraction.pdf"/>
+<meta
+name="pdf:encrypted" content="false"/>
+<meta name="producer"
+content="LibreOffice 4.3"/>
+<meta name="Content-Type" content="application/pdf"/>
+<title></title>
+</head>
+<body>
+        <div class="page">
+<p/>
+<p>Congratulations!
+The extraction seems working!
+Yay!</p>
+<p/>
+</div>
+</body>
+</html>'
+        , '
+        <div class="page">
+<p/>
+<p>Congratulations!
+The extraction seems working!
+Yay!</p>
+<p/>
+</div>
+'
+      ],
+    ];
+  }
+}
